apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.betterup.codingexercise"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {
            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64", "arm64-v8a", "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }

    //This allows test harness data to be copied into the junit test space so the file can be read within the test
    task copyResDirectoryToClasses(type: Copy) {
        from "${projectDir}/src/test/resources"
        into "${buildDir}/intermediates/classes/test/debug/res"

        dependsOn 'assembleDebug'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Android Support Libraries
    implementation "com.android.support:appcompat-v7:${versions.support}"
    implementation "com.android.support:cardview-v7:${versions.support}"
    implementation "com.android.support:design:${versions.support}"

    //Dependency Injection
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${versions.dagger}"

    //RX JAVA
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"

    //AirBnb Lottie
    implementation "com.airbnb.android:lottie:${versions.lottie}"

    //JODA Time
    implementation "joda-time:joda-time:${versions.joda}"

    //Retrofit
    implementation("com.squareup.retrofit2:retrofit:${versions.retrofit}") {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }

    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

    implementation "com.squareup.okhttp:okhttp-urlconnection:${versions.urlConnection}"
    implementation "com.squareup.okhttp:okhttp:${versions.http}"

    //Glide
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"

    //Unit Testing Support Libraries
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "com.google.dagger:dagger:${versions.dagger}"

    testImplementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${versions.dagger}"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${versions.dagger}"

    //Android Based Unit Testing Support Libraries
    androidTestImplementation "com.android.support.test:runner:${versions.testSupport}"
    androidTestImplementation "com.android.support:support-annotations:${versions.support}"
    androidTestImplementation "com.android.support.test:rules:${versions.testSupport}"
    androidTestImplementation "org.hamcrest:hamcrest-library:${versions.hamcrest}"

    //Android Based UI Testing Support Libraries
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:${versions.espressoContrib}") {
        // Necessary to avoid version conflicts
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
}
